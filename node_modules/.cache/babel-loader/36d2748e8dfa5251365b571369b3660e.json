{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Main-WFM\\\\frontend\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\"; //This is context for all the consumers\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomContext = /*#__PURE__*/React.createContext();\n\nclass RoomProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      bookedRooms: 'single-economy',\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      slug: 'single-economy',\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      bookId: 0,\n      place: \"Shimla\" // breakfast:false,\n      // pets:false\n\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms); //   console.log(type,name,value);\n    };\n\n    this.handleClick = event => {\n      // console.log(\"rendering from Context.js\");\n      const slug = event.target.slug;\n      console.log(slug);\n      this.setState({\n        place: \"rome\"\n      }, this.bookedRooms);\n    };\n\n    this.filterRooms = () => {\n      //   console.log(\"Hello\");\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        place\n      } = this.state; //All the rooms\n\n      let tempRooms = [...rooms]; //Transfor values as the number in capacity get changed to string\n\n      capacity = parseInt(capacity); //Transfor values as the number in price get changed to string\n\n      price = parseInt(price); //filter by Type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //filter by Capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by Place\n\n\n      if (place !== 'None') {\n        tempRooms = tempRooms.filter(room => room.place === place);\n      } //filter by Price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price);\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n\n    this.bookedRooms = () => {\n      let {\n        rooms\n      } = this.state;\n      let tempRooms = [...rooms];\n      tempRooms = tempRooms.filter(room => room.slug === slug);\n      console.log(\"Hello\");\n      this.setState({\n        bookedRooms: tempRooms\n      });\n    };\n  }\n\n  //getData\n  componentDidMount() {\n    let rooms = this.formatData(items); // console.log(rooms);\n    //This will bring all the featured rooms\n\n    let featuredRooms = rooms.filter(room => room.featured === true); //Calculating the Max Price from all the rooms\n\n    let maxPrice = Math.max(...rooms.map(item => item.price)); //Calculate random booking-Id\n\n    const min = 1;\n    const max = 100;\n    const bookId = Math.floor(min + Math.random() * (max - min)); //states updated\n\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      bookId: bookId,\n      // slug:this.state.slug,\n      bookedRooms: this.state.slug // place,\n      //   maxSize\n\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange,\n        handleClick: this.handleClick\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer; //Higher Order Component\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/_jsxDEV(RoomConsumer, {\n      children: value => /*#__PURE__*/_jsxDEV(Component, { ...props,\n        context: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }, this);\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["C:/Users/HP/Desktop/Main-WFM/frontend/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","bookedRooms","loading","type","capacity","slug","price","minPrice","maxPrice","bookId","place","getRoom","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","handleClick","console","log","parseInt","filter","componentDidMount","formatData","featured","Math","max","map","item","min","floor","random","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport items from \"./data\";\r\n\r\n\r\n//This is context for all the consumers\r\nconst RoomContext = React.createContext();\r\n\r\nclass RoomProvider extends Component {\r\n\r\n  \r\n\r\n  //Initial states \r\n  state = {\r\n    rooms: [],\r\n    sortedRooms: [],\r\n    featuredRooms: [],\r\n    bookedRooms:'single-economy',\r\n    loading: true,\r\n    type:'all',\r\n    capacity:1,\r\n    slug:'single-economy',\r\n    price:0,\r\n    minPrice:0,\r\n    maxPrice:0,\r\n    bookId:0,\r\n    place:\"Shimla\",\r\n    // breakfast:false,\r\n    // pets:false\r\n  };\r\n\r\n\r\n  \r\n  //getData\r\n\r\n  componentDidMount() {\r\n    let rooms = this.formatData(items);\r\n    // console.log(rooms);\r\n    //This will bring all the featured rooms\r\n    let featuredRooms = rooms.filter(room => room.featured === true);\r\n\r\n    //Calculating the Max Price from all the rooms\r\n    let maxPrice = Math.max(...rooms.map(item =>item.price))\r\n\r\n    //Calculate random booking-Id\r\n    const min = 1;\r\n    const max = 100;\r\n    const bookId = Math.floor(min + (Math.random() * (max - min)));\r\n\r\n\r\n    \r\n    //states updated\r\n    this.setState({\r\n      rooms,\r\n      featuredRooms,\r\n      sortedRooms: rooms,      \r\n      loading: false,\r\n      price:maxPrice,\r\n      maxPrice,\r\n      bookId:bookId,\r\n      // slug:this.state.slug,\r\n      bookedRooms:this.state.slug,\r\n      // place,\r\n    //   maxSize\r\n    });\r\n  }\r\n\r\n  formatData(items) {\r\n    let tempItems = items.map((item) => {\r\n      let id = item.sys.id;\r\n      let images = item.fields.images.map((image) => image.fields.file.url);\r\n      let room = { ...item.fields, images, id };\r\n      return room;\r\n    });\r\n    return tempItems;\r\n  }\r\n\r\n  getRoom = (slug) => {\r\n      let tempRooms = [...this.state.rooms];\r\n      const room = tempRooms.find(room => room.slug === slug)\r\n      return room;\r\n  }\r\n\r\n\r\n  handleChange= event =>{\r\n      const target = event.target\r\n      const value  = event.type ==='checkbox'? target.checked : target.value\r\n      const name=event.target.name\r\n      this.setState({\r\n          [name]:value\r\n      },this.filterRooms)\r\n     \r\n    //   console.log(type,name,value);\r\n  }\r\n\r\n  handleClick=event=>{\r\n    // console.log(\"rendering from Context.js\");\r\n    const slug = event.target.slug\r\n    console.log(slug);\r\n    this.setState({\r\n      place:\"rome\",\r\n    },this.bookedRooms)    \r\n  }\r\n\r\n\r\n\r\n  filterRooms = () =>{\r\n    //   console.log(\"Hello\");\r\n    let {rooms,type,capacity,price,place} = this.state;\r\n\r\n    //All the rooms\r\n    let tempRooms =[...rooms];\r\n\r\n    //Transfor values as the number in capacity get changed to string\r\n    capacity=parseInt(capacity)\r\n\r\n\r\n    //Transfor values as the number in price get changed to string\r\n    price=parseInt(price)\r\n\r\n\r\n    //filter by Type\r\n    if(type !== 'all'){\r\n        tempRooms = tempRooms.filter(room => room.type === type)\r\n    }\r\n\r\n    //filter by Capacity\r\n    if(capacity !== 1){\r\n        tempRooms = tempRooms.filter(room =>room.capacity >=capacity)\r\n    }\r\n\r\n    //filter by Place\r\n    if(place !== 'None'){\r\n        tempRooms = tempRooms.filter(room => room.place === place)\r\n    }\r\n\r\n    //filter by Price\r\n    \r\n        tempRooms = tempRooms.filter(room =>room.price <=price)\r\n    \r\n\r\n    this.setState({\r\n        sortedRooms:tempRooms\r\n    })\r\n\r\n  }\r\n\r\n  bookedRooms=()=>{\r\n    let {rooms} = this.state;\r\n    let tempRooms =[...rooms];  \r\n    tempRooms = tempRooms.filter(room =>room.slug ===slug)  \r\n    console.log(\"Hello\");\r\n    this.setState({\r\n      bookedRooms:tempRooms\r\n  })\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <RoomContext.Provider value={{ ...this.state,getRoom:this.getRoom,handleChange:this.handleChange,handleClick:this.handleClick}}>\r\n        {this.props.children}\r\n      </RoomContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\n//Higher Order Component\r\nexport function withRoomConsumer(Component){\r\n    return function ConsumerWrapper(props){\r\n        return <RoomConsumer>\r\n            {value => <Component {...props} context={value}/>}\r\n        </RoomConsumer>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };\r\n"]},"metadata":{},"sourceType":"module"}