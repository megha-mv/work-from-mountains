{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n * @namespace Sync\n */\n\n\nimport { createRequestConfig, freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport resolveResponse from 'contentful-resolve-response';\nimport mixinStringifySafe from './mixins/stringify-safe';\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {Object} options - Sync options object\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<SyncCollection>}\n */\n\nexport default function pagedSync(http, query) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n  }\n\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry';\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n  }\n\n  var defaultOptions = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    paginate: true\n  };\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options),\n      resolveLinks = _defaultOptions$optio.resolveLinks,\n      removeUnresolved = _defaultOptions$optio.removeUnresolved,\n      paginate = _defaultOptions$optio.paginate;\n\n  var syncOptions = {\n    paginate: paginate\n  };\n  return getSyncPage(http, [], query, syncOptions).then(function (response) {\n    // clones response.items used in includes because we don't want these to be mutated\n    if (resolveLinks) {\n      response.items = resolveResponse(response, {\n        removeUnresolved: removeUnresolved,\n        itemEntryPoints: ['fields']\n      });\n    } // maps response items again after getters are attached\n\n\n    var mappedResponseItems = mapResponseItems(response.items);\n\n    if (response.nextSyncToken) {\n      mappedResponseItems.nextSyncToken = response.nextSyncToken;\n    }\n\n    if (response.nextPageToken) {\n      mappedResponseItems.nextPageToken = response.nextPageToken;\n    }\n\n    return freezeSys(mixinStringifySafe(toPlainObject(mappedResponseItems)));\n  }, function (error) {\n    throw error;\n  });\n}\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\n\nfunction mapResponseItems(items) {\n  var reducer = function reducer(type) {\n    return function (accumulated, item) {\n      if (item.sys.type === type) {\n        accumulated.push(toPlainObject(item));\n      }\n\n      return accumulated;\n    };\n  };\n\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @param {Object} options - Sync page options object\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\n\n\nfunction getSyncPage(http, items, query, _ref) {\n  var paginate = _ref.paginate;\n\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken;\n    delete query.nextSyncToken;\n  }\n\n  if (query.nextPageToken) {\n    query.sync_token = query.nextPageToken;\n    delete query.nextPageToken;\n  }\n\n  if (query.sync_token) {\n    delete query.initial;\n    delete query.type;\n    delete query.content_type;\n  }\n\n  return http.get('sync', createRequestConfig({\n    query: query\n  })).then(function (response) {\n    var data = response.data;\n    items = items.concat(data.items);\n\n    if (data.nextPageUrl) {\n      if (paginate) {\n        delete query.initial;\n        query.sync_token = getToken(data.nextPageUrl);\n        return getSyncPage(http, items, query, {\n          paginate: paginate\n        });\n      }\n\n      return {\n        items: items,\n        nextPageToken: getToken(data.nextPageUrl)\n      };\n    } else if (data.nextSyncUrl) {\n      return {\n        items: items,\n        nextSyncToken: getToken(data.nextSyncUrl)\n      };\n    }\n  });\n}\n/**\n * Extracts token out of an url\n * @private\n */\n\n\nfunction getToken(url) {\n  var urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/Main-WFM/frontend/node_modules/contentful/dist/es-modules/paged-sync.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","createRequestConfig","freezeSys","toPlainObject","resolveResponse","mixinStringifySafe","pagedSync","http","query","options","undefined","initial","nextSyncToken","nextPageToken","Error","content_type","type","defaultOptions","resolveLinks","removeUnresolved","paginate","_defaultOptions$optio","syncOptions","getSyncPage","then","response","items","itemEntryPoints","mappedResponseItems","mapResponseItems","error","reducer","accumulated","item","sys","push","entries","reduce","assets","deletedEntries","deletedAssets","_ref","sync_token","get","data","concat","nextPageUrl","getToken","nextSyncUrl","url","urlParts","split","replace"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;AAEA;AACA;AACA;AACA;;;AACA,SAASS,mBAAT,EAA8BC,SAA9B,EAAyCC,aAAzC,QAA8D,qBAA9D;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC7C,MAAIC,OAAO,GAAGf,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBgB,SAAzC,GAAqDhB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;;AAEA,MAAI,CAACc,KAAD,IAAU,CAACA,KAAK,CAACG,OAAP,IAAkB,CAACH,KAAK,CAACI,aAAzB,IAA0C,CAACJ,KAAK,CAACK,aAA/D,EAA8E;AAC5E,UAAM,IAAIC,KAAJ,CAAU,4FAAV,CAAN;AACD;;AAED,MAAIN,KAAK,IAAIA,KAAK,CAACO,YAAf,IAA+B,CAACP,KAAK,CAACQ,IAA1C,EAAgD;AAC9CR,IAAAA,KAAK,CAACQ,IAAN,GAAa,OAAb;AACD,GAFD,MAEO,IAAIR,KAAK,IAAIA,KAAK,CAACO,YAAf,IAA+BP,KAAK,CAACQ,IAArC,IAA6CR,KAAK,CAACQ,IAAN,KAAe,OAAhE,EAAyE;AAC9E,UAAM,IAAIF,KAAJ,CAAU,8FAAV,CAAN;AACD;;AAED,MAAIG,cAAc,GAAG;AAAEC,IAAAA,YAAY,EAAE,IAAhB;AAAsBC,IAAAA,gBAAgB,EAAE,KAAxC;AAA+CC,IAAAA,QAAQ,EAAE;AAAzD,GAArB;;AAEA,MAAIC,qBAAqB,GAAGhC,QAAQ,CAAC,EAAD,EAAK4B,cAAL,EAAqBR,OAArB,CAApC;AAAA,MACIS,YAAY,GAAGG,qBAAqB,CAACH,YADzC;AAAA,MAEIC,gBAAgB,GAAGE,qBAAqB,CAACF,gBAF7C;AAAA,MAGIC,QAAQ,GAAGC,qBAAqB,CAACD,QAHrC;;AAKA,MAAIE,WAAW,GAAG;AAChBF,IAAAA,QAAQ,EAAEA;AADM,GAAlB;AAIA,SAAOG,WAAW,CAAChB,IAAD,EAAO,EAAP,EAAWC,KAAX,EAAkBc,WAAlB,CAAX,CAA0CE,IAA1C,CAA+C,UAAUC,QAAV,EAAoB;AACxE;AACA,QAAIP,YAAJ,EAAkB;AAChBO,MAAAA,QAAQ,CAACC,KAAT,GAAiBtB,eAAe,CAACqB,QAAD,EAAW;AAAEN,QAAAA,gBAAgB,EAAEA,gBAApB;AAAsCQ,QAAAA,eAAe,EAAE,CAAC,QAAD;AAAvD,OAAX,CAAhC;AACD,KAJuE,CAKxE;;;AACA,QAAIC,mBAAmB,GAAGC,gBAAgB,CAACJ,QAAQ,CAACC,KAAV,CAA1C;;AAEA,QAAID,QAAQ,CAACb,aAAb,EAA4B;AAC1BgB,MAAAA,mBAAmB,CAAChB,aAApB,GAAoCa,QAAQ,CAACb,aAA7C;AACD;;AAED,QAAIa,QAAQ,CAACZ,aAAb,EAA4B;AAC1Be,MAAAA,mBAAmB,CAACf,aAApB,GAAoCY,QAAQ,CAACZ,aAA7C;AACD;;AAED,WAAOX,SAAS,CAACG,kBAAkB,CAACF,aAAa,CAACyB,mBAAD,CAAd,CAAnB,CAAhB;AACD,GAjBM,EAiBJ,UAAUE,KAAV,EAAiB;AAClB,UAAMA,KAAN;AACD,GAnBM,CAAP;AAoBD;AAED;AACA;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0BH,KAA1B,EAAiC;AAC/B,MAAIK,OAAO,GAAG,SAASA,OAAT,CAAiBf,IAAjB,EAAuB;AACnC,WAAO,UAAUgB,WAAV,EAAuBC,IAAvB,EAA6B;AAClC,UAAIA,IAAI,CAACC,GAAL,CAASlB,IAAT,KAAkBA,IAAtB,EAA4B;AAC1BgB,QAAAA,WAAW,CAACG,IAAZ,CAAiBhC,aAAa,CAAC8B,IAAD,CAA9B;AACD;;AACD,aAAOD,WAAP;AACD,KALD;AAMD,GAPD;;AASA,SAAO;AACLI,IAAAA,OAAO,EAAEV,KAAK,CAACW,MAAN,CAAaN,OAAO,CAAC,OAAD,CAApB,EAA+B,EAA/B,CADJ;AAELO,IAAAA,MAAM,EAAEZ,KAAK,CAACW,MAAN,CAAaN,OAAO,CAAC,OAAD,CAApB,EAA+B,EAA/B,CAFH;AAGLQ,IAAAA,cAAc,EAAEb,KAAK,CAACW,MAAN,CAAaN,OAAO,CAAC,cAAD,CAApB,EAAsC,EAAtC,CAHX;AAILS,IAAAA,aAAa,EAAEd,KAAK,CAACW,MAAN,CAAaN,OAAO,CAAC,cAAD,CAApB,EAAsC,EAAtC;AAJV,GAAP;AAMD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASR,WAAT,CAAqBhB,IAArB,EAA2BmB,KAA3B,EAAkClB,KAAlC,EAAyCiC,IAAzC,EAA+C;AAC7C,MAAIrB,QAAQ,GAAGqB,IAAI,CAACrB,QAApB;;AAEA,MAAIZ,KAAK,CAACI,aAAV,EAAyB;AACvBJ,IAAAA,KAAK,CAACkC,UAAN,GAAmBlC,KAAK,CAACI,aAAzB;AACA,WAAOJ,KAAK,CAACI,aAAb;AACD;;AAED,MAAIJ,KAAK,CAACK,aAAV,EAAyB;AACvBL,IAAAA,KAAK,CAACkC,UAAN,GAAmBlC,KAAK,CAACK,aAAzB;AACA,WAAOL,KAAK,CAACK,aAAb;AACD;;AAED,MAAIL,KAAK,CAACkC,UAAV,EAAsB;AACpB,WAAOlC,KAAK,CAACG,OAAb;AACA,WAAOH,KAAK,CAACQ,IAAb;AACA,WAAOR,KAAK,CAACO,YAAb;AACD;;AAED,SAAOR,IAAI,CAACoC,GAAL,CAAS,MAAT,EAAiB1C,mBAAmB,CAAC;AAAEO,IAAAA,KAAK,EAAEA;AAAT,GAAD,CAApC,EAAwDgB,IAAxD,CAA6D,UAAUC,QAAV,EAAoB;AACtF,QAAImB,IAAI,GAAGnB,QAAQ,CAACmB,IAApB;AACAlB,IAAAA,KAAK,GAAGA,KAAK,CAACmB,MAAN,CAAaD,IAAI,CAAClB,KAAlB,CAAR;;AACA,QAAIkB,IAAI,CAACE,WAAT,EAAsB;AACpB,UAAI1B,QAAJ,EAAc;AACZ,eAAOZ,KAAK,CAACG,OAAb;AACAH,QAAAA,KAAK,CAACkC,UAAN,GAAmBK,QAAQ,CAACH,IAAI,CAACE,WAAN,CAA3B;AACA,eAAOvB,WAAW,CAAChB,IAAD,EAAOmB,KAAP,EAAclB,KAAd,EAAqB;AAAEY,UAAAA,QAAQ,EAAEA;AAAZ,SAArB,CAAlB;AACD;;AACD,aAAO;AACLM,QAAAA,KAAK,EAAEA,KADF;AAELb,QAAAA,aAAa,EAAEkC,QAAQ,CAACH,IAAI,CAACE,WAAN;AAFlB,OAAP;AAID,KAVD,MAUO,IAAIF,IAAI,CAACI,WAAT,EAAsB;AAC3B,aAAO;AACLtB,QAAAA,KAAK,EAAEA,KADF;AAELd,QAAAA,aAAa,EAAEmC,QAAQ,CAACH,IAAI,CAACI,WAAN;AAFlB,OAAP;AAID;AACF,GAnBM,CAAP;AAoBD;AAED;AACA;AACA;AACA;;;AACA,SAASD,QAAT,CAAkBE,GAAlB,EAAuB;AACrB,MAAIC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAf;AACA,SAAOD,QAAQ,CAACvD,MAAT,GAAkB,CAAlB,GAAsBuD,QAAQ,CAAC,CAAD,CAAR,CAAYE,OAAZ,CAAoB,aAApB,EAAmC,EAAnC,CAAtB,GAA+D,EAAtE;AACD","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\n * @namespace Sync\n */\nimport { createRequestConfig, freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport resolveResponse from 'contentful-resolve-response';\nimport mixinStringifySafe from './mixins/stringify-safe';\n\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {Object} options - Sync options object\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<SyncCollection>}\n */\nexport default function pagedSync(http, query) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n  }\n\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry';\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n  }\n\n  var defaultOptions = { resolveLinks: true, removeUnresolved: false, paginate: true };\n\n  var _defaultOptions$optio = _extends({}, defaultOptions, options),\n      resolveLinks = _defaultOptions$optio.resolveLinks,\n      removeUnresolved = _defaultOptions$optio.removeUnresolved,\n      paginate = _defaultOptions$optio.paginate;\n\n  var syncOptions = {\n    paginate: paginate\n  };\n\n  return getSyncPage(http, [], query, syncOptions).then(function (response) {\n    // clones response.items used in includes because we don't want these to be mutated\n    if (resolveLinks) {\n      response.items = resolveResponse(response, { removeUnresolved: removeUnresolved, itemEntryPoints: ['fields'] });\n    }\n    // maps response items again after getters are attached\n    var mappedResponseItems = mapResponseItems(response.items);\n\n    if (response.nextSyncToken) {\n      mappedResponseItems.nextSyncToken = response.nextSyncToken;\n    }\n\n    if (response.nextPageToken) {\n      mappedResponseItems.nextPageToken = response.nextPageToken;\n    }\n\n    return freezeSys(mixinStringifySafe(toPlainObject(mappedResponseItems)));\n  }, function (error) {\n    throw error;\n  });\n}\n\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\nfunction mapResponseItems(items) {\n  var reducer = function reducer(type) {\n    return function (accumulated, item) {\n      if (item.sys.type === type) {\n        accumulated.push(toPlainObject(item));\n      }\n      return accumulated;\n    };\n  };\n\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @param {Object} options - Sync page options object\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\nfunction getSyncPage(http, items, query, _ref) {\n  var paginate = _ref.paginate;\n\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken;\n    delete query.nextSyncToken;\n  }\n\n  if (query.nextPageToken) {\n    query.sync_token = query.nextPageToken;\n    delete query.nextPageToken;\n  }\n\n  if (query.sync_token) {\n    delete query.initial;\n    delete query.type;\n    delete query.content_type;\n  }\n\n  return http.get('sync', createRequestConfig({ query: query })).then(function (response) {\n    var data = response.data;\n    items = items.concat(data.items);\n    if (data.nextPageUrl) {\n      if (paginate) {\n        delete query.initial;\n        query.sync_token = getToken(data.nextPageUrl);\n        return getSyncPage(http, items, query, { paginate: paginate });\n      }\n      return {\n        items: items,\n        nextPageToken: getToken(data.nextPageUrl)\n      };\n    } else if (data.nextSyncUrl) {\n      return {\n        items: items,\n        nextSyncToken: getToken(data.nextSyncUrl)\n      };\n    }\n  });\n}\n\n/**\n * Extracts token out of an url\n * @private\n */\nfunction getToken(url) {\n  var urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}"]},"metadata":{},"sourceType":"module"}